/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pension.management.system;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.sql.*;

/**
 *
 * @author Dell
 */
public class BackupForm extends javax.swing.JFrame {

    /**
     * Creates new form BackupForm
     */
    Configuration config;

    public BackupForm() {
        initComponents();
        config = new Configuration();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backupBtn = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Backup Data");
        setBackground(new java.awt.Color(255, 255, 204));
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        backupBtn.setText("Backup");
        backupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backupBtnActionPerformed(evt);
            }
        });

        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(backupBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(151, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(108, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backupBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

//    String location = null;
//    String filename;
    private void backupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupBtnActionPerformed
        // TODO add your handling code here:
//        JFileChooser path = new JFileChooser();
//        path.showOpenDialog(this);
//        Process p = null;
//        String date = new SimpleDateFormat("yyyy-MM-dd").format(new Date());
//        try {
//            File f = path.getSelectedFile();
//            location = f.getAbsolutePath();
//             System.out.println(location);
//           location = location.replace('\\', '/');
//            filename = location + "_" + date + ".bak";
//
//            System.out.println(location);
//
//            System.out.println(filename);
//
//            String sql = "BACKUP DATABASE pension_database TO DISK = '" + filename + "'";
//            Statement statement = config.conn.createStatement();
//            int flag = statement.executeUpdate(sql);
//            
//            System.out.println(flag);
//            if (flag>=-1) {
//                JOptionPane.showMessageDialog(null, "Backup Created", "Pension Record System", JOptionPane.INFORMATION_MESSAGE);
//
//            } else {
//                JOptionPane.showMessageDialog(null, "Backup Failed", "Pension Record System", JOptionPane.ERROR_MESSAGE);
//            }
//
//
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(null, ex.toString(), "Pension Record System", JOptionPane.ERROR_MESSAGE);
//        ex.printStackTrace();
//        }
//


 String filename;
    String date = new SimpleDateFormat("yyyy-MM-dd").format(new Date());

    try {
        // Define backup directory
        String backupDir = "D:/Backups/";
        
        // Ensure directory exists
        File dir = new File(backupDir);
        if (!dir.exists()) {
            dir.mkdirs(); // create directory if not exist
        }

        filename = backupDir + "pension_database_" + date + ".bak";

        String sql = "BACKUP DATABASE pension_database TO DISK = '" + filename + "'";
        Statement statement = config.conn.createStatement();
        int flag = statement.executeUpdate(sql);

        if (flag >= -1) {
            JOptionPane.showMessageDialog(null, "Backup Created:\n" + filename, "Pension Record System", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Backup Failed", "Pension Record System", JOptionPane.ERROR_MESSAGE);
        }

    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, ex.toString(), "Pension Record System", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    }

    }//GEN-LAST:event_backupBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BackupForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BackupForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BackupForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BackupForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BackupForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backupBtn;
    private javax.swing.JButton closeBtn;
    // End of variables declaration//GEN-END:variables
}

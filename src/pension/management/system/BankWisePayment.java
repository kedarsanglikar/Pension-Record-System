/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pension.management.system;

import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Dell
 */
public class BankWisePayment extends javax.swing.JFrame {

    /**
     * Creates new form BankWisePayment
     */
    Configuration config;

    String tableQuery = "SELECT * FROM pension_database.bankbranch_table WHERE Amount!=0;";
//    String onlyBankQuery="SELECT NetAmount FROM pension_database.pension_data GROUP BY BankName;";
    String onlyBankQuery = "SELECT BankName, COUNT(NetAmount) AS T1, SUM(NetAmount) AS NetAmount FROM pension_database.pension_data GROUP BY BankName";
    DefaultTableModel defaultTableModel;

    public BankWisePayment() {
        initComponents();
        config = new Configuration();
        fetchBankAndBranch(tableQuery);
        fetchOnlyBanks(onlyBankQuery);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bankWiseTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        exportBanks = new javax.swing.JButton();
        printAllBanks = new javax.swing.JButton();
        closeBtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        onlyBankTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        exportBankToExcelBtn = new javax.swing.JButton();
        printBanksBtn = new javax.swing.JButton();
        closeBanksBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Banks and Branches ");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Branch Wise Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        bankWiseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sr. No.", "Bank and Branch", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bankWiseTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        jScrollPane1.setViewportView(bankWiseTable);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Actions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N

        exportBanks.setText("Export to Excel");
        exportBanks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBanksActionPerformed(evt);
            }
        });

        printAllBanks.setText("Print All Records");
        printAllBanks.setPreferredSize(new java.awt.Dimension(109, 23));
        printAllBanks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printAllBanksActionPerformed(evt);
            }
        });

        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(exportBanks, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(printAllBanks, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exportBanks, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(printAllBanks, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Bank wise Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(536, 476));

        onlyBankTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Sr. No.", "Banks", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(onlyBankTable);

        jPanel5.setBackground(new java.awt.Color(204, 204, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Actions", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 16))); // NOI18N
        jPanel5.setPreferredSize(new java.awt.Dimension(469, 129));

        exportBankToExcelBtn.setText("Export to Excel");
        exportBankToExcelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBankToExcelBtnActionPerformed(evt);
            }
        });

        printBanksBtn.setText("Print All Records");
        printBanksBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBanksBtnActionPerformed(evt);
            }
        });

        closeBanksBtn.setText("Close");
        closeBanksBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBanksBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(exportBankToExcelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(printBanksBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeBanksBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(exportBankToExcelBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                    .addComponent(printBanksBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(closeBanksBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exportBanksToExcel(JTable jt) {
        try {
            fetchBankAndBranch(tableQuery);
            
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(jt);
            File saveFile = jFileChooser.getSelectedFile();
            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("bank_and_branch_wise_records");
                sheet.setColumnWidth(1, 15000);
                sheet.setColumnWidth(2, 5000);
                Row rowCol = sheet.createRow(0);
                XSSFFont font = ((XSSFWorkbook) wb).createFont();
                font.setBold(true);
                CellStyle style = wb.createCellStyle();
                style.setFont(font);
                for (int i = 0; i < jt.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellStyle(style);
                    cell.setCellValue(jt.getColumnName(i));

                }
                Cell cell = null;
                for (int j = 0; j < jt.getRowCount(); j++) {
                    Row row = sheet.createRow(j + 1);
                    for (int k = 0; k < jt.getColumnCount(); k++) {
                        cell = row.createCell(k);
                        if (jt.getValueAt(j, k) != null) {
                            cell.setCellValue(jt.getValueAt(j, k).toString());

                        }

                    }
                }

                Row row = sheet.createRow(jt.getRowCount() + 1);
                Cell cell1 = row.createCell(jt.getColumnCount() - 1);
                long netPaySumAll = fetchBankAndBranch(tableQuery);
                cell1.setCellStyle(style);
                cell1.setCellValue(Long.toString(netPaySumAll));

                Cell cell2 = row.createCell(0);
                cell2.setCellValue("Total");
                cell2.setCellStyle(style);

                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                wb.close();
                out.close();
                openFile(saveFile.toString());

            } else {
                JOptionPane.showMessageDialog(null, "Operation Cancelled", "Pension Record System", JOptionPane.ERROR_MESSAGE);

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Exception occured : " + ex.toString(), "Pension Record System", JOptionPane.ERROR_MESSAGE);

        }
    }
    private void exportOnlyBanksToExcel(JTable jt) {
        try {
            
            fetchOnlyBanks(onlyBankQuery);

            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(jt);
            File saveFile = jFileChooser.getSelectedFile();
            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                Workbook wb = new XSSFWorkbook();
                Sheet sheet = wb.createSheet("bank_wise_records");
                sheet.setColumnWidth(1, 10000);
                sheet.setColumnWidth(2, 5000);
                Row rowCol = sheet.createRow(0);
                XSSFFont font = ((XSSFWorkbook) wb).createFont();
                font.setBold(true);
                CellStyle style = wb.createCellStyle();
                style.setFont(font);
                for (int i = 0; i < jt.getColumnCount(); i++) {
                    Cell cell = rowCol.createCell(i);
                    cell.setCellStyle(style);
                    cell.setCellValue(jt.getColumnName(i));

                }
                Cell cell = null;
                for (int j = 0; j < jt.getRowCount(); j++) {
                    Row row = sheet.createRow(j + 1);
                    for (int k = 0; k < jt.getColumnCount(); k++) {
                        cell = row.createCell(k);
                        if (jt.getValueAt(j, k) != null) {
                            cell.setCellValue(jt.getValueAt(j, k).toString());

                        }

                    }
                }

                Row row = sheet.createRow(jt.getRowCount() + 1);
                Cell cell1 = row.createCell(jt.getColumnCount() - 1);
                long netPaySumAllBanks = fetchOnlyBanks(onlyBankQuery);
                cell1.setCellStyle(style);
                cell1.setCellValue(Long.toString(netPaySumAllBanks));

                Cell cell2 = row.createCell(0);
                cell2.setCellValue("Total");
                cell2.setCellStyle(style);

                FileOutputStream out = new FileOutputStream(new File(saveFile.toString()));
                wb.write(out);
                wb.close();
                out.close();
                openFile(saveFile.toString());

            } else {
                JOptionPane.showMessageDialog(null, "Operation Cancelled", "Pension Record System", JOptionPane.ERROR_MESSAGE);

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Exception occured : " + ex.toString(), "Pension Record System", JOptionPane.ERROR_MESSAGE);

        }
    }


    private void openFile(String file) {
        try {
            File path = new File(file);
            Desktop.getDesktop().open(path);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Exception occured : " + ex.toString(), "Pension Record System", JOptionPane.ERROR_MESSAGE);

        }
    }

    private void exportBanksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBanksActionPerformed
        // TODO add your handling code here:
        exportBanksToExcel(bankWiseTable);
    }//GEN-LAST:event_exportBanksActionPerformed

    private void printAllBanksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printAllBanksActionPerformed
        // TODO add your handling code here:
        fetchBankAndBranch(tableQuery);
        MessageFormat header = new MessageFormat("All Banks And Branches");
        MessageFormat footer = new MessageFormat("All Banks And Branches");
        try {
//            PrintRequestAttributeSet set=new HashPrintRequestAttributeSet();
//            set.add(OrientationRequested.LANDSCAPE);
            boolean flag = bankWiseTable.print(JTable.PrintMode.FIT_WIDTH, header, footer);
            if (flag) {
                JOptionPane.showMessageDialog(null, "Printed Successfully", "Print Data", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Operation Cancelled", "Print Data", JOptionPane.ERROR_MESSAGE);

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Failed", "Print Data", JOptionPane.ERROR);

        }

    }//GEN-LAST:event_printAllBanksActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeBtnActionPerformed

    private void exportBankToExcelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBankToExcelBtnActionPerformed
        // TODO add your handling code here:
        exportOnlyBanksToExcel(onlyBankTable);
    }//GEN-LAST:event_exportBankToExcelBtnActionPerformed

    private void printBanksBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBanksBtnActionPerformed
        // TODO add your handling code here:
         fetchOnlyBanks(onlyBankQuery);
        MessageFormat header = new MessageFormat("All Banks");
        MessageFormat footer = new MessageFormat("All Banks");
        try {
//            PrintRequestAttributeSet set=new HashPrintRequestAttributeSet();
//            set.add(OrientationRequested.LANDSCAPE);
            boolean flag = onlyBankTable.print(JTable.PrintMode.FIT_WIDTH, header, footer);
            if (flag) {
                JOptionPane.showMessageDialog(null, "Printed Successfully", "Print Data", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Operation Cancelled", "Print Data", JOptionPane.ERROR_MESSAGE);

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Failed", "Print Data", JOptionPane.ERROR);

        }
    }//GEN-LAST:event_printBanksBtnActionPerformed

    private void closeBanksBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBanksBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeBanksBtnActionPerformed

    private long fetchBankAndBranch(String query) {
        try {
            DefaultTableModel model = (DefaultTableModel) bankWiseTable.getModel();
            model.setRowCount(0);
            Statement stmt = config.conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            int rows = 0;
            while (rs.next()) {
                rows++;
                int srNo = rows;
                String bankAndBranch = rs.getString("BankAndBranch");
                long amount = rs.getLong("Amount");

                Object tblData[] = {srNo, bankAndBranch, amount};
                defaultTableModel = (DefaultTableModel) bankWiseTable.getModel();
                defaultTableModel.addRow(tblData);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Database exception occured" + ex.toString(), "Pension Record System", JOptionPane.ERROR_MESSAGE);

        }

        long netPaySumAll = 0;
        for (int i = 0; i < bankWiseTable.getRowCount(); i++) {
            netPaySumAll = (long) (netPaySumAll + Double.parseDouble(bankWiseTable.getValueAt(i, 2).toString()));
        }
        System.out.println("Net Pay Sum : " + netPaySumAll);
        return netPaySumAll;
    }

    private long fetchOnlyBanks(String query) {
        try {
            DefaultTableModel model = (DefaultTableModel) onlyBankTable.getModel();
            model.setRowCount(0);
            Statement stmt = config.conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            int rows = 0;
            while (rs.next()) {
                rows++;
                int srNo = rows;
                String bank = rs.getString("BankName");
                long netAmount = rs.getLong("NetAmount");

                Object tblData[] = {srNo, bank, netAmount};
                defaultTableModel = (DefaultTableModel) onlyBankTable.getModel();
                defaultTableModel.addRow(tblData);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Database exception occured" + ex.toString(), "Pension Record System", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }

        long netPaySumAllBank = 0;
        for (int i = 0; i < onlyBankTable.getRowCount(); i++) {
            netPaySumAllBank = (long) (netPaySumAllBank + Double.parseDouble(onlyBankTable.getValueAt(i, 2).toString()));
        }
        System.out.println("Banks Net Pay Sum : " + netPaySumAllBank);
        return netPaySumAllBank;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BankWisePayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BankWisePayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BankWisePayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BankWisePayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BankWisePayment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bankWiseTable;
    private javax.swing.JButton closeBanksBtn;
    private javax.swing.JButton closeBtn;
    private javax.swing.JButton exportBankToExcelBtn;
    private javax.swing.JButton exportBanks;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable onlyBankTable;
    private javax.swing.JButton printAllBanks;
    private javax.swing.JButton printBanksBtn;
    // End of variables declaration//GEN-END:variables
}
